{"version":3,"sources":["logo.svg","components/Tiles/Tiles.js","components/Projects/Projects.js","components/Body/Body.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Tile","props","span","backgroundClass","iconImg","label","centerText","bgURL","link","href","this","target","className","toString","style","backgroundImage","React","Component","Projects","reverseScroll","width","Body","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.00a96325.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport './Tiles.scss';\n\nclass Tile extends React.Component{\n  constructor(props){\n    super(props);\n    this.span = props.span || 1;\n    this.backgroundClass= props.backgroundClass || 'brandlightgrey-bg';\n    this.iconImg= props.iconImg;\n    this.label= props.label || '';\n    this.centerText= props.centerText;\n    this.bgURL = props.bgURL || '';\n    this.link = props.link || '#';\n  }\n\n  render(){\n    return (\n      <a href={this.link} target={this.link == '#' ? '' : '_blank'} className={`tile span-${this.span.toString()} ${this.backgroundClass}`} style={{backgroundImage: `url(${this.bgURL})`}}>\n        <p className=\"tile-label brandwhite-bg\">{this.label}</p>\n      </a>\n    )\n  }\n}\n\nexport default Tile;","import React from 'react';\nimport HorizontalScroll from 'react-scroll-horizontal'\n\nimport './Projects.scss';\nimport Tile from '../Tiles/Tiles'; \n\n\nfunction Projects() {\n  return (\n    <div className=\"projects\">\n    <h2>projects</h2>\n      <HorizontalScroll\n        reverseScroll = {true}\n      >\n         <div className=\"project\">\n          <Tile span=\"2\" label=\"Sellar\" bgURL=\"images/sellar.png\" link=\"https://sellarapp.web.app\"/>\n          <Tile span=\"2\" backgroundClass=\"brandwhite-bg\"/>\n          <Tile label=\"Flutter\" bgURL=\"images/flutter.png\" link=\"https://flutter.dev/\"/>\n          <Tile label=\"App Store\" bgURL=\"images/app_store.png\" link=\"https://apps.apple.com/us/app/sellar-listing-tool/id1505149522?ls=1\"/>\n          <Tile label=\"Play Store\" bgURL=\"images/play_store.png\" link=\"https://play.google.com/store/apps/details?id=com.milesau.sellar\"/>\n          <Tile label=\"Firebase\" bgURL=\"images/firebase.png\" link=\"https://firebase.google.com/\"/>\n          <Tile span=\"3\" label=\"RevenueCat\" bgURL=\"images/revenuecat.png\" link=\"https://www.revenuecat.com/\"/>\n          <Tile label=\"ARKit\" bgURL=\"images/arkit.png\" link=\"https://developer.apple.com/augmented-reality/arkit/\"/>\n          <Tile label=\"ARCore\" bgURL=\"images/arcore.png\" link=\"https://developers.google.com/ar\"/>\n        </div>\n\n        <div className=\"project\">\n          <Tile span=\"1\" label=\"JunkAR\" bgURL=\"images/junk_ar.png\"/>\n          <Tile span=\"3\" backgroundClass=\"brandwhite-bg\"/>\n          <Tile label=\"Flutter\" bgURL=\"images/flutter.png\" link=\"https://flutter.dev/\"/>\n          <Tile span=\"3\" label=\"Blender\" bgURL=\"images/blender.png\" link=\"https://www.blender.org/\"/>\n          <Tile label=\"App Store\" bgURL=\"images/app_store.png\"/>\n          <Tile label=\"ARKit\" bgURL=\"images/arkit.png\" link=\"https://developer.apple.com/augmented-reality/arkit/\"/>\n        </div>\n\n        <div className=\"project\">\n          <Tile span=\"2\" label=\"Live Price Converter\" bgURL=\"images/live_price_converter.png\" link=\"https://www.producthunt.com/posts/live-price-converter\"/>\n          <Tile span=\"2\" backgroundClass=\"brandwhite-bg\"/>\n          <Tile label=\"Swift\" bgURL=\"images/swift.png\" link=\"https://developer.apple.com/swift/\"/>\n          <Tile label=\"App Store\" bgURL=\"images/app_store.png\" link=\"https://apps.apple.com/us/app/live-price-converter/id1494835186\"/>\n          <Tile span='2' label=\"Apple Text Recognition\" bgURL=\"images/apple_ml.png\" link=\"https://developer.apple.com/videos/play/wwdc2019/234/\"/>\n        </div>\n\n        <div className=\"project\">\n          <Tile span=\"1\" label=\"Digitails\" bgURL=\"images/digitails.png\" link=\"https://www.producthunt.com/posts/digitails\"/>\n          <Tile span=\"3\" backgroundClass=\"brandwhite-bg\"/>\n          <Tile label=\"Flutter\" bgURL=\"images/flutter.png\" link=\"https://flutter.dev/\"/>\n          <Tile span='3' label=\"Ruby on Rails\" bgURL=\"images/rails.png\" link=\"https://rubyonrails.org\"/>\n          <Tile label=\"App Store\" bgURL=\"images/app_store.png\" link=\"https://apps.apple.com/us/app/digitails/id1494513448\"/>\n          <Tile label=\"Play Store\" bgURL=\"images/play_store.png\" link=\"https://play.google.com/store/apps/details?id=com.milesau.digitails\"/>\n        </div>\n\n        <div className=\"project\">\n          <Tile span=\"4\" label=\"Show My Socials\" bgURL=\"images/show_my_socials.png\" link=\"https://milesau.com/show_my_socials/\"/>\n          <Tile label=\"React JS\" bgURL=\"images/reactjs.png\" link=\"https://reactjs.org\"/>\n        </div>\n\n        <div className=\"project\">\n          <Tile label=\"Promo Posts\" bgURL=\"images/promo_posts.png\" link=\"https://github.com/miles-au/promoposts\"/>\n          <Tile span=\"3\" backgroundClass=\"brandwhite-bg\"/>\n          <Tile span='3' label=\"Ruby on Rails\" bgURL=\"images/rails.png\" link=\"https://rubyonrails.org\"/>\n          <Tile label=\"JQuery\" bgURL=\"images/jquery.png\" link=\"https://jquery.com\"/>\n          <Tile label=\"Heroku\" bgURL=\"images/heroku.png\" link=\"https://www.heroku.com\"/>\n          <Tile label=\"Bootstrap\" bgURL=\"images/bootstrap.png\" link=\"https://getbootstrap.com\"/>\n          <Tile label=\"Google Cloud\" bgURL=\"images/google_cloud.png\" link=\"https://cloud.google.com\"/>\n        </div>\n\n        <div style={{width: \"200px\"}}>\n        </div>\n\n        <div className=\"project\">\n          <Tile label=\"Contact Me\" backgroundClass=\"brandwhite-bg\"/>\n          <Tile span=\"3\" backgroundClass=\"brandwhite-bg\"/>\n          <Tile label=\"Email\" bgURL=\"images/Email.png\" link=\"mailto:miles.d.au@gmail.com\"/>\n          <Tile label=\"LinkedIn\" bgURL=\"images/LinkedIn.png\" link=\"https://www.linkedin.com/in/milesau\"/>\n          <Tile label=\"GitHub\" bgURL=\"images/GitHub.png\" link=\"https://github.com/miles-au\"/>\n        </div>\n      </HorizontalScroll>\n    </div>\n  );\n}\n\nexport default Projects;","import React from 'react';\nimport './Body.scss';\nimport Projects from '../Projects/Projects';\n\nfunction Body() {\n  return (\n    <div className=\"body\">\n      <Projects />\n    </div>\n  );\n}\n\nexport default Body;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\n\nimport Body from './components/Body/Body';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"brandlightgrey-bg\">\n        <h1>Miles Au</h1>\n      </header>\n      <Body />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}